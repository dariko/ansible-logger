heat_template_version: 2018-08-31
parameters:
    network:
        type: string
        constraints:
        -   custom_constraint: neutron.network
    image:
        type: string
        constraints:
        -   custom_constraint: glance.image
    root_volume_size:
        type: number
        default: 10
    root_volume_type:
        type: string
        default: ceph

    elasticsearch_volume_type:
        type: string
        default: ceph
    elasticsearch_volume_size:
        type: number
        default: 15

    flavor_elasticsearch:
        type: string
        default: sys.2c4r
    flavor_kibana:
        type: string
        default: sys.2c4r
    flavor_rsyslog:
        type: string
        default: sys.2c2r

    deploy_version:
        type: string
        default: master

    scale_rsyslog:
        type: number
        default: 1

resources:
    _network:
        type: OS::Neutron::Net
        external_id: {get_param: network}

    dns_suffix:
        type: OS::Heat::Value
        properties:
            value:
                list_join:
                -   ""
                -   -   {get_attr: [_network, name]}
                    -   .os.it3.ns.farm

    rsyslog_security_group:
        type: OS::Neutron::SecurityGroup
        properties:
            rules:
            -   protocol: tcp
                port_range_min: 22
                port_range_max: 22
            -   protocol: tcp
                port_range_min: 514
                port_range_max: 514
            -   protocol: udp
                port_range_min: 514
                port_range_max: 514
            -   protocol: icmp

    kibana_security_group:
        type: OS::Neutron::SecurityGroup
        properties:
            rules:
            -   protocol: tcp
                port_range_min: 22
                port_range_max: 22
            -   protocol: tcp
                port_range_min: 5601
                port_range_max: 5601
            -   protocol: icmp

    elasticsearch_security_group:
        type: OS::Neutron::SecurityGroup
        properties:
            rules:
            -   protocol: tcp
                port_range_min: 22
                port_range_max: 22
            -   protocol: tcp
                port_range_min: 9200
                port_range_max: 9200
                remote_mode: remote_group_id
                remote_group_id: {get_resource: kibana_security_group}
            -   protocol: tcp
                port_range_min: 9200
                port_range_max: 9200
                remote_mode: remote_group_id
                remote_group_id: {get_resource: rsyslog_security_group}
            -   protocol: udp
                port_range_min: 9300
                port_range_max: 9300
                remote_mode: remote_group_id
            -   protocol: icmp

    loadbalancer:
        type: OS::Octavia::LoadBalancer
        properties:
            vip_subnet: {get_attr: [_network, subnets, 0]}

    listener_tcp80:
        type: OS::Octavia::Listener
        properties:
            loadbalancer: {get_resource: loadbalancer}
            protocol: TCP
            protocol_port: 80

    pool_kibana:
        type: OS::Octavia::Pool
        properties:
            lb_algorithm: ROUND_ROBIN
            listener: {get_resource: listener_tcp80}
            protocol: TCP

    pool_kibana_healthmonitor:
        type: OS::Octavia::HealthMonitor
        properties:
            delay: 3
            max_retries: 2
            timeout: 2
            type: TCP
            pool: {get_resource: pool_kibana}

    listener_udp514:
        type: OS::Octavia::Listener
        properties:
            loadbalancer: {get_resource: loadbalancer}
            protocol: UDP
            protocol_port: 514

    pool_rsyslog:
        type: OS::Octavia::Pool
        properties:
            lb_algorithm: ROUND_ROBIN
            listener: {get_resource: listener_udp514}
            protocol: UDP

    pool_rsyslog_healthmonitor:
        type: OS::Octavia::HealthMonitor
        properties:
            delay: 3
            max_retries: 2
            timeout: 2
            type: UDP-CONNECT
            pool: {get_resource: pool_rsyslog}

    keypair:
        type: OS::Nova::KeyPair
        properties:
            save_private_key: yes
            name: {list_join: ["-", ["ansible-runner", {get_param: OS::stack_id}]]}

    kibana_name:
        type: OS::Heat::Value
        properties:
            value:
                str_replace:
                    template: kibana.stack_id
                    params:
                        stack_id: {get_param: OS::stack_id}

    elasticsearch_name:
        type: OS::Heat::Value
        properties:
            value:
                str_replace:
                    template: elasticsearch.stack_id
                    params:
                        stack_id: {get_param: OS::stack_id}

    kibana_port:
        type: OS::Neutron::Port
        properties:
            network: {get_param: network}
            security_groups:
            -   {get_resource: kibana_security_group}
            dns_name: {get_attr: [kibana_name, value]}

    kibana_pool_member:
        type: OS::Octavia::PoolMember
        properties:
            address: {get_attr: [kibana_port, fixed_ips, 0, ip_address]}
            pool: {get_resource: pool_kibana}
            protocol_port: 5601

    elasticsearch_port:
        type: OS::Neutron::Port
        properties:
            network: {get_param: network}
            security_groups:
            -   {get_resource: elasticsearch_security_group}
            dns_name: {get_attr: [elasticsearch_name, value]}

    elasticsearch_root_volume:
        type: OS::Cinder::Volume
        properties:
            image: {get_param: image}
            size: {get_param: root_volume_size}
            volume_type: {get_param: root_volume_type}

    kibana_root_volume:
        type: OS::Cinder::Volume
        properties:
            image: {get_param: image}
            size: {get_param: root_volume_size}
            volume_type: {get_param: root_volume_type}

    elasticsearch_data_volume:
        type: OS::Cinder::Volume
        properties:
            size: {get_param: elasticsearch_volume_size}
            volume_type: {get_param: elasticsearch_volume_type}

    rsyslog_servers:
        type: OS::Heat::ResourceGroup
        properties:
            count: {get_param: scale_rsyslog}
            resource_def:
                type: OS::Heat::Stack
                properties:
                    parameters:
                        network: {get_param: network}
                        keypair: {get_resource: keypair}
                        volume_type: {get_param: root_volume_type}
                        volume_size: {get_param: root_volume_size}
                        image: {get_param: image}
                        flavor: {get_param: flavor_rsyslog}
                        security_group: {get_resource: rsyslog_security_group}
                        pool: {get_resource: pool_rsyslog}
                    template: |
                        heat_template_version: 2018-08-31
                        parameters:
                            image:
                                type: string
                            volume_type:
                                type: string
                            volume_size:
                                type: string
                            network:
                                type: string
                            flavor:
                                type: string
                            keypair:
                                type: string
                            security_group:
                                type: string
                            pool:
                                type: string
                        resources:
                            name:
                                type: OS::Heat::Value
                                properties:
                                    value:
                                        str_replace:
                                            template: rsyslog-%index%.stack_id
                                            params:
                                                stack_id: {get_param: OS::stack_id}
                            pool_member:
                                type: OS::Octavia::PoolMember
                                properties:
                                    address: {get_attr: [port, fixed_ips, 0, ip_address]}
                                    pool: {get_param: pool}
                                    protocol_port: 514
                            port:
                                type: OS::Neutron::Port
                                properties:
                                    network: {get_param: network}
                                    security_groups:
                                    -   {get_param: security_group}
                                    dns_name: {get_attr: [name, value]}
                            root_volume:
                                type: OS::Cinder::Volume
                                properties:
                                    image: {get_param: image}
                                    size: {get_param: volume_size}
                                    volume_type: {get_param: volume_type}
                            server:
                                type: OS::Nova::Server
                                properties:
                                    networks:
                                    -   port: {get_resource: port}
                                    block_device_mapping_v2:
                                    -   volume_id: {get_resource: root_volume}
                                    name: {get_attr: [name, value]}
                                    flavor: {get_param: flavor}
                                    user_data_format: SOFTWARE_CONFIG
                                    key_name: {get_param: keypair}
                        outputs:
                            name:
                                value:
                                    str_replace:
                                        template: $name.$dns_suffix
                                        params:
                                            $name: {get_attr: [name, value]}

    elasticsearch_server:
        type: OS::Nova::Server
        properties:
            networks:
            -   port: {get_resource: elasticsearch_port}
            block_device_mapping:
            block_device_mapping_v2:
            -   volume_id: {get_resource: elasticsearch_root_volume}
            flavor: {get_param: flavor_elasticsearch}
            user_data_format: SOFTWARE_CONFIG
            key_name: {get_resource: keypair}
            name: {get_attr: [elasticsearch_name, value]}

    elasticsearch_data_volume_attachment:
        type: OS::Cinder::VolumeAttachment
        properties:
            instance_uuid: {get_resource: elasticsearch_server}
            volume_id: {get_resource: elasticsearch_data_volume}
            mountpoint: /dev/vdb

    kibana_server:
        type: OS::Nova::Server
        properties:
            networks:
            -   port: {get_resource: kibana_port}
            block_device_mapping_v2:
            -   volume_id: {get_resource: kibana_root_volume}
            flavor: {get_param: flavor_kibana}
            user_data_format: SOFTWARE_CONFIG
            key_name: {get_resource: keypair}
            name: {get_attr: [kibana_name, value]}

    ansible_inventory:
        type: OS::Heat::Value
        properties:
            value:
                str_replace:
                    params:
                        $dns_suffix: {get_attr: [dns_suffix, value]}
                    template:
                        str_replace:
                            params:
                                $rsyslog_names:
                                    list_join:
                                    -   "\n"
                                    -   {get_attr: [rsyslog_servers, outputs, name]}
                                $kibana_name: {get_attr: [kibana_server, name]}
                                $elasticsearch_name: {get_attr: [elasticsearch_server, name]}
                            template: |
                                [rsyslog]
                                $rsyslog_names
                                [kibana]
                                $kibana_name.$dns_suffix
                                [elasticsearch]
                                $elasticsearch_name.$dns_suffix

    ansible_runner:
        type: Immobiliare::AnsibleRunner::v2
        properties:
            ssh_key:
                get_attr:
                -   keypair
                -   private_key
            inventory: {get_attr: [ansible_inventory, value]}
            repository_url: https://github.com/dariko/ansible-logger
            repository_version: {get_param: deploy_version}
            playbook_name: site.yml
            groups:
            -   rsyslog: {get_attr: rsyslog_servers, outputs, inventory}

outputs:
    kibana_url:
        value:
            str_replace:
                params:
                    loadbalancer_vip: {get_attr: [loadbalancer, vip_address]}
                template: http://loadbalancer_vip
    rsyslog_address:
        value: {get_attr: [loadbalancer, vip_address]}
